<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xingji.frameproject.mybatis.dao.LogininDao">
  <resultMap id="BaseResultMap" type="com.xingji.frameproject.mybatis.entity.Loginin">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="loginTime" jdbcType="TIMESTAMP" property="logintime" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="TypeOfOperator" jdbcType="VARCHAR" property="typeofoperator" />
  </resultMap>
  <sql id="Base_Column_List">
    id, loginTime, operator, TypeOfOperator
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from loginin
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="findloginlogbylogtime" resultType="com.xingji.frameproject.vo.LoginLogVo">
      select * from loginin where logintime=#{LoginTime}
    </select>
    <select id="findAll" resultType="com.xingji.frameproject.mybatis.entity.Loginin">
      SELECT l.* FROM `loginin` l
      <where>
        <if test="logintime != null and logintime != ''">
          and c.logintime  LIKE CONCAT('%',#{logintime,jdbcType=TIMESTAMP},'%')
        </if>
        <if test="operator != null and operator != ''">
          and c.operator LIKE CONCAT('%',#{operator,jdbcType=VARCHAR},'%')
        </if>
        <if test="typeofoperator != null and typeofoperator != ''">
          and c.typeofoperator LIKE CONCAT('%',#{typeofoperator,jdbcType=VARCHAR},'%')
        </if>
      </where>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from loginin
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xingji.frameproject.mybatis.entity.Loginin" useGeneratedKeys="true">
    insert into loginin (loginTime, operator, TypeOfOperator
      )
    values (#{logintime,jdbcType=TIMESTAMP}, #{operator,jdbcType=VARCHAR}, #{typeofoperator,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xingji.frameproject.mybatis.entity.Loginin" useGeneratedKeys="true">
    insert into loginin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logintime != null">
        loginTime,
      </if>
      <if test="operator != null">
        `operator`,
      </if>
      <if test="typeofoperator != null">
        TypeOfOperator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logintime != null">
        #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="typeofoperator != null">
        #{typeofoperator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xingji.frameproject.mybatis.entity.Loginin">
    update loginin
    <set>
      <if test="logintime != null">
        loginTime = #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        `operator` = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="typeofoperator != null">
        TypeOfOperator = #{typeofoperator,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xingji.frameproject.mybatis.entity.Loginin">
    update loginin
    set loginTime = #{logintime,jdbcType=TIMESTAMP},
      `operator` = #{operator,jdbcType=VARCHAR},
      TypeOfOperator = #{typeofoperator,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>