<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xingji.frameproject.mybatis.dao.OperationlogDao">
  <resultMap id="BaseResultMap" type="com.xingji.frameproject.mybatis.entity.Operationlog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="operation" jdbcType="VARCHAR" property="operation" />
    <result column="method" jdbcType="VARCHAR" property="method" />
    <result column="params" jdbcType="VARCHAR" property="params" />
    <result column="ipaddress" jdbcType="VARCHAR" property="ipaddress" />
  </resultMap>
  <sql id="Base_Column_List">
    id, createtime, `operator`, `operation`, `method`, params, ipaddress
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from operationlog
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from operationlog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xingji.frameproject.mybatis.entity.Operationlog" useGeneratedKeys="true">
    insert into operationlog (createtime, `operator`, `operation`, 
      `method`, params, ipaddress
      )
    values (#{createtime,jdbcType=TIMESTAMP}, #{operator,jdbcType=VARCHAR}, #{operation,jdbcType=VARCHAR}, 
      #{method,jdbcType=VARCHAR}, #{params,jdbcType=VARCHAR}, #{ipaddress,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xingji.frameproject.mybatis.entity.Operationlog" useGeneratedKeys="true">
    insert into operationlog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createtime != null">
        createtime,
      </if>
      <if test="operator != null">
        `operator`,
      </if>
      <if test="operation != null">
        `operation`,
      </if>
      <if test="method != null">
        `method`,
      </if>
      <if test="params != null">
        params,
      </if>
      <if test="ipaddress != null">
        ipaddress,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operation != null">
        #{operation,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="params != null">
        #{params,jdbcType=VARCHAR},
      </if>
      <if test="ipaddress != null">
        #{ipaddress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xingji.frameproject.mybatis.entity.Operationlog">
    update operationlog
    <set>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        `operator` = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operation != null">
        `operation` = #{operation,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        `method` = #{method,jdbcType=VARCHAR},
      </if>
      <if test="params != null">
        params = #{params,jdbcType=VARCHAR},
      </if>
      <if test="ipaddress != null">
        ipaddress = #{ipaddress,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xingji.frameproject.mybatis.entity.Operationlog">
    update operationlog
    set createtime = #{createtime,jdbcType=TIMESTAMP},
      `operator` = #{operator,jdbcType=VARCHAR},
      `operation` = #{operation,jdbcType=VARCHAR},
      `method` = #{method,jdbcType=VARCHAR},
      params = #{params,jdbcType=VARCHAR},
      ipaddress = #{ipaddress,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>