<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xingji.frameproject.mybatis.dao.BaseOpeningDao">

    <resultMap type="com.xingji.frameproject.mybatis.entity.BaseOpening" id="BaseOpeningMap">
        <result property="depotName" column="depot_name" jdbcType="VARCHAR"/>
        <result property="openingNumber" column="opening_number" jdbcType="INTEGER"/>
        <result property="productNumber" column="product_number" jdbcType="INTEGER"/>
        <result property="expectNumber" column="expect_number" jdbcType="INTEGER"/>
        <result property="productId" column="product_id" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseOpeningMap">
        select
          depot_name, opening_number, product_number, expect_number, product_id
        from frameproject.base_opening
        where  = #{productId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseOpeningMap">
        select
          depot_name, opening_number, product_number, expect_number, product_id
        from frameproject.base_opening
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseOpeningMap">
        select
        depot_name, opening_number, product_number, expect_number, product_id
        from frameproject.base_opening
        <where>
            <if test="depotName != null and depotName != ''">
                and depot_name = #{depotName}
            </if>
            <if test="openingNumber != null">
                and opening_number = #{openingNumber}
            </if>
            <if test="productNumber != null">
                and product_number = #{productNumber}
            </if>
            <if test="expectNumber != null">
                and expect_number = #{expectNumber}
            </if>
            <if test="productId != null and productId != ''">
                and product_id = #{productId}
            </if>
        </where>
    </select>
    <select id="finddepot"  resultMap="BaseOpeningMap">
        SELECT o.* FROM base_opening o
        INNER JOIN base_product p ON p.product_id = o.product_id
        INNER JOIN base_depot d ON d.depot_name = o.depot_name
		WHERE p.product_id=#{productId} and d.state=1
    </select>
    <!--新增所有列-->
    <insert id="insert" keyProperty="" useGeneratedKeys="true">
        insert into frameproject.base_opening(depot_name, opening_number, product_number, expect_number, product_id)
        values (#{depotName}, #{openingNumber}, #{productNumber}, #{expectNumber}, #{productId})
    </insert>

    <insert id="insertBatch" keyProperty="" useGeneratedKeys="true">
        insert into frameproject.base_opening(depot_name, opening_number, product_number, expect_number, product_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.depotName}, #{entity.openingNumber}, #{entity.productNumber}, #{entity.expectNumber},
            #{entity.productId})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="" useGeneratedKeys="true">
        insert into frameproject.base_opening(depot_name, opening_number, product_number, expect_number, product_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.depotName}, #{entity.openingNumber}, #{entity.productNumber}, #{entity.expectNumber},
            #{entity.productId})
        </foreach>
        on duplicate key update
        depot_name = values(depot_name) , opening_number = values(opening_number) , product_number =
        values(product_number) , expect_number = values(expect_number) , product_id = values(product_id)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update frameproject.base_opening
        <set>
            <if test="depotName != null and depotName != ''">
                depot_name = #{depotName},
            </if>
            <if test="openingNumber != null">
                opening_number = #{openingNumber},
            </if>
            <if test="productNumber != null">
                product_number = #{productNumber},
            </if>
            <if test="expectNumber != null">
                expect_number = #{expectNumber},
            </if>
            <if test="productId != null and productId != ''">
                product_id = #{productId},
            </if>
        </set>
        where = #{productId}
    </update>
    <!--减少预计库存数量-->
    <update id="expectreduce">
        update base_opening
        <set>
        <if test="expectNumber != null and expectNumber != ''">
        expect_number=expect_number-#{expectNumber}
        </if>
        </set>
         where product_id = #{productId} and depot_name = #{depotName}
    </update>
    <!--减少实际库存数量-->
    <update id="productereduce">
        update base_opening
        <set>
        <if test="productNumber != null and productNumber != ''">
            product_number =product_number - #{productNumber}
        </if>
        </set>
         where product_id = #{productId} and depot_name = #{depotName}
    </update>
    <!--增加预计库存数量-->
    <update id="expectadd">
        update base_opening
        <set>
            <if test="expectNumber != null and expectNumber != ''">
                expect_number=expect_number+#{expectNumber}
            </if>
        </set>
        where product_id = #{productId} and depot_name = #{depotName}
    </update>
    <!--增加实际库存数量-->
    <update id="producteadd">
        update base_opening
        <set>
            <if test="productNumber != null and productNumber != ''">
                product_number =product_number+#{productNumber}
            </if>
        </set>
        where product_id = #{productId} and depot_name = #{depotName}
    </update>
    <!--通过主键删除-->
    <delete id="deleteById">
        delete from frameproject.base_opening where  = #{productId}
    </delete>

</mapper>

