<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xingji.frameproject.mybatis.dao.BaseVendorProductDao">

    <resultMap type="com.xingji.frameproject.mybatis.entity.BaseVendorProduct" id="BaseVendorProductMap">
        <result property="vendorId" column="vendor_id" jdbcType="VARCHAR"/>
        <result property="productId" column="product_id" jdbcType="VARCHAR"/>
        <result property="priceRatio" column="price_ratio" jdbcType="NUMERIC"/>
        <result property="money" column="money" jdbcType="NUMERIC"/>
    </resultMap>

    <resultMap type="com.xingji.frameproject.vo.BaseVendorProductVo" id="BaseVendorProductVoMap">
        <result property="vendorId" column="vendor_id" jdbcType="VARCHAR"/>
        <result property="productId" column="product_id" jdbcType="VARCHAR"/>
        <result property="priceRatio" column="price_ratio" jdbcType="NUMERIC"/>
        <result property="money" column="money" jdbcType="NUMERIC"/>
        <result property="vendorName" column="vendor_name" jdbcType="VARCHAR"/>
        <result property="productName" column="product_name" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseVendorProductMap">
        select
          vendor_id, product_id, price_ratio, money
        from frameproject.base_vendor_product
        where  vendor_id = #{vendorId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseVendorProductMap">
        select
          vendor_id, product_id, price_ratio, money
        from frameproject.base_vendor_product
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseVendorProductMap">
        select
        vendor_id, product_id, price_ratio, money
        from frameproject.base_vendor_product
        <where>
            <if test="vendorId != null and vendorId != ''">
                and vendor_id = #{vendorId}
            </if>
            <if test="productId != null and productId != ''">
                and product_id = #{productId}
            </if>
            <if test="priceRatio != null">
                and price_ratio = #{priceRatio}
            </if>
            <if test="money != null">
                and money = #{money}
            </if>
        </where>
    </select>
    <!--通过BaseVendorProductVo作为筛选条件查询-->
    <select id="queryAllBaseVendorProductVo" resultMap="BaseVendorProductVoMap">
        SELECT vp.*,v.vendor_name,p.product_name FROM `base_vendor_product` vp
        LEFT JOIN `base_vendor` v ON v.vendor_id=vp.vendor_id
        LEFT JOIN `base_product` p ON p.product_id=vp.product_id
        <where>
            <if test="vendorId != null and vendorId != ''">
                vendor_id = #{vendorId}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" useGeneratedKeys="true">
        insert into frameproject.base_vendor_product(vendor_id, product_id, price_ratio, money)
        values (#{vendorId}, #{productId}, #{priceRatio}, #{money})
    </insert>

    <insert id="insertBatch" keyProperty="" useGeneratedKeys="true">
        insert into frameproject.base_vendor_product(vendor_id, product_id, price_ratio, money)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.vendorId}, #{entity.productId}, #{entity.priceRatio}, #{entity.money})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="" useGeneratedKeys="true">
        insert into frameproject.base_vendor_product(vendor_id, product_id, price_ratio, money)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.vendorId}, #{entity.productId}, #{entity.priceRatio}, #{entity.money})
        </foreach>
        on duplicate key update
        vendor_id = values(vendor_id) , product_id = values(product_id) , price_ratio = values(price_ratio) , money =
        values(money)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update frameproject.base_vendor_product
        <set>
            <if test="vendorId != null and vendorId != ''">
                vendor_id = #{vendorId},
            </if>
            <if test="productId != null and productId != ''">
                product_id = #{productId},
            </if>
            <if test="priceRatio != null">
                price_ratio = #{priceRatio},
            </if>
            <if test="money != null">
                money = #{money},
            </if>
        </set>
        where = #{}
    </update>

    <!--通过产品编号删除-->
    <delete id="deleteById">
        delete from frameproject.base_vendor_product where product_id = #{productId}
    </delete>

</mapper>

