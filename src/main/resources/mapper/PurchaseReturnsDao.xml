<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xingji.frameproject.dao.PurchaseReturnsDao">

    <resultMap type="com.xingji.frameproject.entity.PurchaseReturns" id="PurchaseReturnsMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="exitDate" column="exit_date" jdbcType="TIMESTAMP"/>
        <result property="vendorName" column="vendor_name" jdbcType="VARCHAR"/>
        <result property="buyerName" column="buyer_name" jdbcType="VARCHAR"/>
        <result property="depotName" column="depot_name" jdbcType="VARCHAR"/>
        <result property="offersPrice" column="offers_price" jdbcType="NUMERIC"/>
        <result property="vettingName" column="vetting_name" jdbcType="VARCHAR"/>
        <result property="lastVettingTime" column="last_vetting_time" jdbcType="TIMESTAMP"/>
        <result property="vettingState" column="vetting_state" jdbcType="INTEGER"/>
        <result property="contact" column="contact" jdbcType="VARCHAR"/>
        <result property="createDate" column="create_date" jdbcType="TIMESTAMP"/>
        <result property="updateDate" column="update_date" jdbcType="TIMESTAMP"/>
        <result property="counter" column="counter" jdbcType="INTEGER"/>
        <result property="purchaseOrder" column="purchase_order" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="PurchaseReturnsMap">
        select id,
               exit_date,
               vendor_name,
               buyer_name,
               depot_name,
               offers_price,
               vetting_name,
               last_vetting_time,
               vetting_state,
               contact,
               create_date,
               update_date,
               counter,
               purchase_order
        from frameproject.purchase_returns
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="PurchaseReturnsMap">
        select id,
               exit_date,
               vendor_name,
               buyer_name,
               depot_name,
               offers_price,
               vetting_name,
               last_vetting_time,
               vetting_state,
               contact,
               create_date,
               update_date,
               counter,
               purchase_order
        from frameproject.purchase_returns limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="PurchaseReturnsMap">
        select
        id, exit_date, vendor_name, buyer_name, depot_name, offers_price, vetting_name, last_vetting_time,
        vetting_state, contact, create_date, update_date, counter, purchase_order
        from frameproject.purchase_returns
        <where>
            <if test="id != null and id != ''">
                and id = #{id}
            </if>
            <if test="exitDate != null">
                and exit_date = #{exitDate}
            </if>
            <if test="vendorName != null and vendorName != ''">
                and vendor_name = #{vendorName}
            </if>
            <if test="buyerName != null and buyerName != ''">
                and buyer_name = #{buyerName}
            </if>
            <if test="depotName != null and depotName != ''">
                and depot_name = #{depotName}
            </if>
            <if test="offersPrice != null">
                and offers_price = #{offersPrice}
            </if>
            <if test="vettingName != null and vettingName != ''">
                and vetting_name = #{vettingName}
            </if>
            <if test="lastVettingTime != null">
                and last_vetting_time = #{lastVettingTime}
            </if>
            <if test="vettingState != null">
                and vetting_state = #{vettingState}
            </if>
            <if test="contact != null and contact != ''">
                and contact = #{contact}
            </if>
            <if test="createDate != null">
                and create_date = #{createDate}
            </if>
            <if test="updateDate != null">
                and update_date = #{updateDate}
            </if>
            <if test="counter != null">
                and counter = #{counter}
            </if>
            <if test="purchaseOrder != null and purchaseOrder != ''">
                and purchase_order = #{purchaseOrder}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into frameproject.purchase_returns(exit_date, vendor_name, buyer_name, depot_name, offers_price,
                                                  vetting_name, last_vetting_time, vetting_state, contact, create_date,
                                                  update_date, counter, purchase_order)
        values (#{exitDate}, #{vendorName}, #{buyerName}, #{depotName}, #{offersPrice}, #{vettingName},
                #{lastVettingTime}, #{vettingState}, #{contact}, #{createDate}, #{updateDate}, #{counter},
                #{purchaseOrder})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into frameproject.purchase_returns(exit_date, vendor_name, buyer_name, depot_name, offers_price,
        vetting_name, last_vetting_time, vetting_state, contact, create_date, update_date, counter, purchase_order)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.exitDate}, #{entity.vendorName}, #{entity.buyerName}, #{entity.depotName}, #{entity.offersPrice},
            #{entity.vettingName}, #{entity.lastVettingTime}, #{entity.vettingState}, #{entity.contact},
            #{entity.createDate}, #{entity.updateDate}, #{entity.counter}, #{entity.purchaseOrder})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into frameproject.purchase_returns(exit_date, vendor_name, buyer_name, depot_name, offers_price,
        vetting_name, last_vetting_time, vetting_state, contact, create_date, update_date, counter, purchase_order)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.exitDate}, #{entity.vendorName}, #{entity.buyerName}, #{entity.depotName}, #{entity.offersPrice},
            #{entity.vettingName}, #{entity.lastVettingTime}, #{entity.vettingState}, #{entity.contact},
            #{entity.createDate}, #{entity.updateDate}, #{entity.counter}, #{entity.purchaseOrder})
        </foreach>
        on duplicate key update
        exit_date = values(exit_date) , vendor_name = values(vendor_name) , buyer_name = values(buyer_name) , depot_name
        = values(depot_name) , offers_price = values(offers_price) , vetting_name = values(vetting_name) ,
        last_vetting_time = values(last_vetting_time) , vetting_state = values(vetting_state) , contact =
        values(contact) , create_date = values(create_date) , update_date = values(update_date) , counter =
        values(counter) , purchase_order = values(purchase_order)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update frameproject.purchase_returns
        <set>
            <if test="exitDate != null">
                exit_date = #{exitDate},
            </if>
            <if test="vendorName != null and vendorName != ''">
                vendor_name = #{vendorName},
            </if>
            <if test="buyerName != null and buyerName != ''">
                buyer_name = #{buyerName},
            </if>
            <if test="depotName != null and depotName != ''">
                depot_name = #{depotName},
            </if>
            <if test="offersPrice != null">
                offers_price = #{offersPrice},
            </if>
            <if test="vettingName != null and vettingName != ''">
                vetting_name = #{vettingName},
            </if>
            <if test="lastVettingTime != null">
                last_vetting_time = #{lastVettingTime},
            </if>
            <if test="vettingState != null">
                vetting_state = #{vettingState},
            </if>
            <if test="contact != null and contact != ''">
                contact = #{contact},
            </if>
            <if test="createDate != null">
                create_date = #{createDate},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate},
            </if>
            <if test="counter != null">
                counter = #{counter},
            </if>
            <if test="purchaseOrder != null and purchaseOrder != ''">
                purchase_order = #{purchaseOrder},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from frameproject.purchase_returns
        where id = #{id}
    </delete>

</mapper>

